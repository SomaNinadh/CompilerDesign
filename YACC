                   %option noyywrap
%{
    #include
    #include "y.tab.h"
%}

%%
[0-9]+    {yylval.num=atoi(yytext); return(NUMBER);}
\n {return(0);}
. {return(yytext[0]);}
%%

yacc code.y
%{
    #include
%}

%union{
   int num;
}

%token NUMBER

%left '+' '-'
%left '*' '/'

%type AE
%type E

%%
AE:E {printf("The result is %d",$$);};
E:E'+'E {$$=$1+$3;}
E:E'-'E {$$=$1-$3;}
E:E''E {$$=$1$3;}
E:E'/'E {$$=$1/$3;}
| NUMBER {$$=$1;};
%%
void main(){
  yyparse();
}

void yyerror(){
 printf("Error!!!");
}


           
commands
               yacc -d calc.yacc
                lex -d calc.lex
                cc y.tab.c lex.yy.c
                ./a.out
